"use strict";(self.webpackChunkaem_maven_archetype=self.webpackChunkaem_maven_archetype||[]).push([[536],{"./src/main/webpack/components/cardgroup/cardgroup.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:function(){return CardGroup}});class CardGroup{constructor(el){this.el=el,this.defaultRecordsToLoad=9,this.recordsToLoad=2*this.defaultRecordsToLoad,this.counter=this.defaultRecordsToLoad,this.spinner=document.createElement("div"),this.initializeCards(this.el),setTimeout((()=>{this.scrollInView(this.el)}),1e3)}static init(el){return new CardGroup(el)}initializeCards(block){const getAllCards=block.querySelectorAll("li");getAllCards?.length>9&&(getAllCards.forEach(((list,index)=>{index>8&&list.classList.add("hidden")})),this.addSpinner(block))}addSpinner(block){this.spinner.className="spinner",this.spinner.innerHTML+='<div class="loader">\n        <svg class="circular-loader"viewBox="25 25 50 50" >\n          <circle class="loader-path" cx="50" cy="50" r="20" fill="none" stroke="#03f" stroke-width="8" />\n        </svg>\n      </div>',block.parentNode.appendChild(this.spinner)}initializeSpinner(block){const cards=block.querySelectorAll("li");if(block.querySelectorAll(".hidden").length){for(let i=this.counter;i<Math.min(this.recordsToLoad,cards.length);i++)cards[i].classList.remove("hidden");this.counter+=this.defaultRecordsToLoad,this.recordsToLoad+=this.defaultRecordsToLoad}else this.spinner.classList.add("hidden")}scrollInView(block){new IntersectionObserver((entries=>{entries[0].intersectionRatio<=0||this.initializeSpinner(block)}),{threshold:1}).observe(this.spinner)}}}}]);